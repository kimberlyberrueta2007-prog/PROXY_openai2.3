import OpenAI from "openai";

const client = new OpenAI({
  apiKey: process.env.OPENAI_API_KEY,
});

export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ error: "M√©todo no permitido" });
  }

  try {
    const { prompt, mode } = req.body || {};

    // üß† Validaci√≥n simple
    if (!prompt) {
      return res.status(400).json({ error: "Falta el prompt" });
    }

    // üé® MODO CREAR ‚Üí imagen art√≠stica + descripci√≥n
    if (mode === "crear") {
      // 1Ô∏è‚É£ Generar descripci√≥n art√≠stica con GPT
      const completion = await client.chat.completions.create({
        model: "gpt-5",
        messages: [
          {
            role: "system",
            content:
              "Eres Dise√±aArte, una IA art√≠stica experta en pintura digital elegante con trazos definidos, brillo y contraste. Describe el estilo, los colores y la atm√≥sfera de la obra.",
          },
          { role: "user", content: prompt },
        ],
      });

      const description = completion.choices[0]?.message?.content || "Ilustraci√≥n art√≠stica generada.";

      // 2Ô∏è‚É£ Generar imagen con DALL¬∑E 3
      const image = await client.images.generate({
        model: "gpt-image-1", // DALL¬∑E 3
        prompt: `${prompt}, ilustraci√≥n elegante con trazos definidos y brillo, estilo digital painting profesional.`,
        size: "1024x1024",
      });

      const imageUrl = image.data[0].url;

      return res.status(200).json({
        reply: `üñåÔ∏è ${description}`,
        image: imageUrl, // el JS la dibuja en el canvas
      });
    }

    // ‚úèÔ∏è MODO ASESORAR ‚Üí gu√≠a paso a paso (solo texto)
    const guide = await client.chat.completions.create({
      model: "gpt-5",
      messages: [
        {
          role: "system",
          content:
            "Eres Dise√±aArte, un profesor de dibujo. Ense√±a paso a paso c√≥mo realizar bocetos art√≠sticos con trazos elegantes y proporciones correctas.",
        },
        { role: "user", content: prompt },
      ],
    });

    const guideText = guide.choices[0]?.message?.content || "Comienza con formas b√°sicas y l√≠neas suaves.";

    return res.status(200).json({
      reply: `‚úèÔ∏è ${guideText}`,
    });
  } catch (error) {
    console.error("‚ùå Error IA:", error);
    return res.status(500).json({
      error: "Error al generar respuesta IA",
      details: error.message,
    });
  }
}
